{"ast":null,"code":"var _jsxFileName = \"/Users/ak/Desktop/projects/project-3/client/src/components/views/RegisterPage/RegisterPage.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      lastName: '',\n      name: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Name is required'),\n      lastName: Yup.string().required('Last Name is required'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          name: values.name,\n          lastname: values.lastname,\n          image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            props.history.push(\"/login\");\n          } else {\n            alert(response.payload.err.errmsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Sign up\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n      style: {\n        minWidth: '375px'\n      }\n    }, formItemLayout, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"name\",\n      placeholder: \"Enter your name\",\n      type: \"text\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.name && touched.name ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"lastName\",\n      placeholder: \"Enter your Last Name\",\n      type: \"text\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.lastName && touched.lastName ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, errors.lastName)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Email\",\n      hasFeedback: true,\n      validateStatus: errors.email && touched.email ? \"error\" : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      placeholder: \"Enter your Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Password\",\n      hasFeedback: true,\n      validateStatus: errors.password && touched.password ? \"error\" : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      label: \"Confirm\",\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"Enter your confirmPassword\",\n      type: \"password\",\n      value: values.confirmPassword,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSubmit,\n      type: \"primary\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"Submit\"))));\n  });\n}\n\n;\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/ak/Desktop/projects/project-3/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","lastName","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","lastname","image","unix","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n"]},"metadata":{},"sourceType":"module"}