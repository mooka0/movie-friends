{"ast":null,"code":"var _jsxFileName = \"/Users/ak/Desktop/projects/project-3/client/src/components/views/MovieDetailPage/MovieDetailPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { API_URL, API_KEY, IMAGE_URL } from '../../Config';\nimport MainImage from '../LandingPage/Sections/MainImage';\nimport { Descriptions, Button, Row } from 'antd';\nimport GridCard from '../LandingPage/Sections/GridCard';\n\nfunction MovieDetailPage(props) {\n  const [Movie, setMovie] = useState([]);\n  const [Crews, setCrews] = useState([]);\n  const [ActorToggle, setActorToggle] = useState(false);\n  useEffect(() => {\n    const movieId = props.match.params.movieId;\n    fetch(`${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`).then(response => response.json()).then(response => {\n      setMovie(response);\n      fetch(`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(reponse => response.json).then(reponse => {\n        setCrews(response.cast);\n      });\n    });\n  }, []);\n\n  const handleClick = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, Movie && /*#__PURE__*/React.createElement(MainImage, {\n    image: `${IMAGE_URL}w1280${Movie.backdrop_path && Movie.backdrop_path}`,\n    title: Movie.original_title,\n    text: Movie.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '1rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \" Add to Favorite\")), /*#__PURE__*/React.createElement(Descriptions, {\n    title: \"Movie Info\",\n    bordered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, Movie.original_title), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"release_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.release_date), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"revenue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.revenue, \"e\"), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"runtime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.runtime), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"vote_average\",\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.vote_average), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"vote_count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.vote_count), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.status), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"popularity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, MovieDetailPage.popularity)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" Toggle Actor View\")), ActorToggle && /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, Crews && Crews.map((crew, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, crew.profile_path && /*#__PURE__*/React.createElement(GridCard, {\n    actor: true,\n    image: `{IMAGE_URL}w500${crew.profile.path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }))))));\n}\n\nexport default MovieDetailPage;","map":{"version":3,"sources":["/Users/ak/Desktop/projects/project-3/client/src/components/views/MovieDetailPage/MovieDetailPage.js"],"names":["React","useEffect","useState","API_URL","API_KEY","IMAGE_URL","MainImage","Descriptions","Button","Row","GridCard","MovieDetailPage","props","Movie","setMovie","Crews","setCrews","ActorToggle","setActorToggle","movieId","match","params","fetch","then","response","json","reponse","cast","handleClick","backdrop_path","original_title","overview","width","margin","display","justifyContent","release_date","revenue","runtime","vote_average","vote_count","status","popularity","map","crew","index","profile_path","profile","path"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {API_URL, API_KEY, IMAGE_URL} from '../../Config'\nimport MainImage from '../LandingPage/Sections/MainImage'\nimport { Descriptions, Button, Row } from 'antd'\nimport GridCard from '../LandingPage/Sections/GridCard'\n\nfunction MovieDetailPage(props) {\n\n    const [Movie, setMovie] = useState([])\n    const [Crews, setCrews] = useState([])\n    const [ActorToggle, setActorToggle ] = useState(false)\n\n    useEffect(() => {\n\n        const movieId = props.match.params.movieId\n\n        fetch(`${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => response.json())\n        .then(response => {\n            setMovie(response)\n            fetch(`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\n            .then(reponse => response.json)\n            .then(reponse => {\n                setCrews(response.cast)\n\n            })\n        })\n    }, [])\n\n    const handleClick = () => {\n        setActorToggle(!ActorToggle)\n    }\n\n\n    return (\n        <div>\n            {/* Main Image */}\n            {Movie && \n            <MainImage image={`${IMAGE_URL}w1280${Movie.backdrop_path && Movie.backdrop_path}`} \n            title={Movie.original_title} text={Movie.overview} />\n            }\n       \n        {/* Body */}\n        <div style={{ width: '85%', margin: '1rem auto'}}>\n            <div style={{ display: 'flex', justifyContent: 'flex-end'}}>\n                <Button> Add to Favorite</Button>\n            </div>\n\n        {/* Movie Info Table*/}\n        <Descriptions title=\"Movie Info\" bordered>\n            <Descriptions.Item label=\"Title\">{Movie.original_title}</Descriptions.Item>\n            <Descriptions.Item label=\"release_date\">{MovieDetailPage.release_date}</Descriptions.Item>\n            <Descriptions.Item label=\"revenue\">{MovieDetailPage.revenue}e</Descriptions.Item>\n            <Descriptions.Item label=\"runtime\">{MovieDetailPage.runtime}</Descriptions.Item>\n            <Descriptions.Item label=\"vote_average\" span={2}>\n                {MovieDetailPage.vote_average}</Descriptions.Item>\n            <Descriptions.Item label=\"vote_count\">{MovieDetailPage.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"status\">{MovieDetailPage.status}</Descriptions.Item>\n            <Descriptions.Item label=\"popularity\">{MovieDetailPage.popularity}</Descriptions.Item>\n        </Descriptions>\n\n    \n            <div style={{ display: 'flex', justifyContent: 'center'}}>\n                <Button onClick={handleClick}> Toggle Actor View</Button>\n            </div>\n        \n        {/* Gridcard for crews */}\n\n{ActorToggle && \n    <Row gutter={[16,16]}>\n            {Crews && Crews.map((crew, index) => (\n                <React.Fragment key={index}>\n                    {crew.profile_path &&\n                    <GridCard\n                    actor image={`{IMAGE_URL}w500${crew.profile.path}`}\n                     />\n                    }\n                </React.Fragment>\n           \n            ))}  \n            </Row>\n            }\n\n            \n\n\n        </div>\n        </div>\n    )\n}\n\nexport default MovieDetailPage;"]},"metadata":{},"sourceType":"module"}